<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.1.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.oyhp.demo</groupId>
    <artifactId>jacoco</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>jacoco</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.github.hcsp</groupId>
            <artifactId>test-library-a</artifactId>
            <version>0.1</version>
        </dependency>
        <dependency>
            <groupId>com.github.hcsp</groupId>
            <artifactId>test-library-d</artifactId>
            <version>0.1</version>
            <exclusions>
                <exclusion>
                    <artifactId>test-library-c</artifactId>
                    <groupId>com.github.hcsp</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--http请求工具类-->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.6</version>
        </dependency>

        <!--Json解析工具-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.70</version>
        </dependency>

        <!-- mybatis -->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>1.1.1</version>
        </dependency>

        <!-- mysql -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.21</version>
        </dependency>

        <!--分页器-->
        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper</artifactId>
            <version>4.1.6</version>
        </dependency>

        <!--SpringBoot容器启动-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>


        <!--mockito模拟单元测试-->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>3.3.3</version>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.10.19</version>
            <scope>test</scope>
        </dependency>

        <!--flyway数据库迁移工具-->
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
            <version>5.2.4</version>
            <scope>test</scope>
        </dependency>

        <!--H2内存数据库-->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.4.199</version>
            <scope>runtime</scope>
        </dependency>

        <!--2.2.0以上版本已经内置了JUnit5-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!--Junit5覆盖测试-->
        <!--<dependency>-->
            <!--<groupId>org.junit.jupiter</groupId>-->
            <!--<artifactId>junit-jupiter-params</artifactId>-->
            <!--<version>5.4.2</version>-->
            <!--<scope>test</scope>-->
        <!--</dependency>-->

        <!--JUnit5-->
        <!--<dependency>-->
            <!--<groupId>org.junit.jupiter</groupId>-->
            <!--<artifactId>junit-jupiter-api</artifactId>-->
            <!--<version>5.5.0</version>-->
            <!--<scope>test</scope>-->
        <!--</dependency>-->

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!--Junit单元测试插件-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <!--JUnit5有版本限制问题-->
                <version>3.0.0-M5</version>
                <configuration>
                    <argLine>-Dfile.encoding=UTF-8 ${argLine}</argLine>
                    <excludes>
                        <exclude>**/*IntegrationTest.java</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!--Junit集成测试插件-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.0.0-M5</version>
                <configuration>
                    <includes>
                        <include>**/*IntegrationTest.java</include>
                    </includes>
                </configuration>
            </plugin>

            <!--执行系统命令参数插件-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <executions>
                    <!--启动docker，在集成测试开始前-->
                    <execution>
                        <id>start-docker-mysql</id>
                        <!--<phase>pre-integration-test</phase>-->
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <longModulepath>false</longModulepath>
                            <executable>docker</executable>
                            <arguments>
                                <argument>run</argument>
                                <argument>-d</argument>
                                <argument>--name</argument>
                                <argument>test-mysql</argument>
                                <argument>-p</argument>
                                <argument>3307:3306</argument>
                                <argument>-e</argument>
                                <argument>-MYSQL_ROOT_PASSWORD=123456</argument>
                                <argument>-mysql</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <!--docker不是启动了立马就可以使用的，所以等待docker容器启动10秒-->
                    <execution>
                        <id>wait-docker-mysql</id>
                        <!--暂时用不到，docker跑不起来-->
                        <!--<phase>pre-integration-test</phase>-->
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <longModulepath>false</longModulepath>
                            <executable>sleep</executable>
                            <arguments>
                                <argument>10</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <!--关闭docker，在集成测试结束后-->
                    <execution>
                        <id>stop-docker-mysql</id>
                        <!--<phase>post-integration-test</phase>-->
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <longModulepath>false</longModulepath>
                            <executable>docker</executable>
                            <arguments>
                                <argument>rm</argument>
                                <argument>-f</argument>
                                <argument>test-mysql</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--测试覆盖率插件-->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.5</version>
                <configuration>
                    <excludes>
                        <exclude>**/JacocoApplication.class</exclude>
                        <exclude>**/model/*.class</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <phase>test</phase>
                    </execution>
                    <execution>
                        <id>default-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <phase>post-integration-test</phase>
                        <configuration>
                            <skip>true</skip>
                            <rules>
                                <rule>
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit>
                                            <counter>COMPLEXITY</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.60</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--flyway数据库迁移插件-->
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <configuration>
                    <!--flyway迁移配置，mvn flyway:lifecycle会自动读取参数-->
                    <user>root</user>
                    <password>123456</password>
                    <url>jdbc:mysql://127.0.0.1:3306/flyway?characterEncoding=UTF-8</url>
                    <driver>com.mysql.jdbc.Driver</driver>
                    <!--生产环境false，开发环境true-->
                    <cleanDisabled>false</cleanDisabled>
                    <locations>
                        <location>classpath:db/migration</location>
                    </locations>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
